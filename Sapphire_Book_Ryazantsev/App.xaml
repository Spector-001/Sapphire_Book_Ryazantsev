<Application x:Class="Sapphire_Book_Ryazantsev.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Sapphire_Book_Ryazantsev"
             StartupUri="Avtorization.xaml">
    <Application.Resources>
        <Style x:Key="button" TargetType="Button" >
            <Setter Property="Width" Value="190" />
            <Setter Property="Height" Value="50" />
            <Setter Property="FontSize" Value="25" />
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Bold" />
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>

                        <TextBlock Text="{Binding}" Foreground="White" FontSize="25" FontWeight="Bold" FontFamily="Italic">
                            <TextBlock.Effect>
                                <DropShadowEffect Color="Black" ShadowDepth="3" BlurRadius="5"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>


        </Style>
        <Style x:Key="label" TargetType="Label" >
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="50"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>

                        <TextBlock Text="{Binding}" Foreground="White" FontSize="50" FontWeight="Bold" FontFamily="Comic Sans MS">
                            <TextBlock.Effect>
                                <DropShadowEffect Color="Black" ShadowDepth="3" BlurRadius="5"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
       
        </Style>
        <Style x:Key="LABEL1" TargetType="Label"  >
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Foreground="White" FontSize="26" FontWeight="Bold">
                            <TextBlock.Effect>
                                <DropShadowEffect Color="Black" ShadowDepth="2" BlurRadius="3"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="text1" TargetType="TextBlock" >
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="30" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="T1" TargetType="TextBox" >
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Width"  Value="300"/>
            <Setter Property ="Margin" Value="5" />
        </Style>
        <Style TargetType="PasswordBox" x:Key="PasswordBox" >
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="300" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>

        </Style>
        <Style x:Key="Tb2" TargetType="ComboBox" >
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Width"  Value="300"/>
            <Setter Property ="Margin" Value="5" />
            <Setter Property="Background" Value="White" />
        </Style>
        <Style x:Key="button3" TargetType="Button" >
            <Setter Property="Width" Value="200" />
            <Setter Property="Height" Value="60" />
            <Setter Property="FontSize" Value="25" />
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Impact"  />
            <Setter Property="FontStyle" Value="Italic" />
        </Style>
        <Style x:Key="AnimatedImageStyle" TargetType="Image">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Setter Property="Opacity" Value="0" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />

            <Style.Triggers>

                <!-- Анимация появления при загрузке -->
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Появление с увеличением масштаба -->
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.8" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.8" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                            </DoubleAnimationUsingKeyFrames>

                            <!-- Плавное появление -->
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="0" To="1" Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <!-- Анимация увеличения при наведении -->
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Легкое увеличение прозрачности -->
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             To="1.1" Duration="0:0:0.2" />

                            <!-- Увеличение масштаба X -->
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0" />
                            </DoubleAnimationUsingKeyFrames>

                            <!-- Увеличение масштаба Y -->
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <!-- Возврат к исходному состоянию при уводе курсора -->
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Восстановление прозрачности -->
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             To="1" Duration="0:0:0.2" />

                            <!-- Возврат масштаба X -->
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0" />
                            </DoubleAnimationUsingKeyFrames>

                            <!-- Возврат масштаба Y -->
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

            </Style.Triggers>
        </Style>



    </Application.Resources>
</Application>
