//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sapphire_Book_Ryazantsev
{
    using System;
    using System.Collections.Generic;
    
    public partial class Books
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Books()
        {
            this.BookLoans = new HashSet<BookLoans>();
        }
    
        public int ProductID { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public string Category { get; set; }
        public string ImagePath { get; set; }
        public string Status { get; set; }
        public Nullable<int> AuthorID { get; set; }
        public Nullable<int> GenreID { get; set; }
        public Nullable<int> ShelfID { get; set; }
    
      
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BookLoans> BookLoans { get; set; }


        public string AuthorName => Author?.AuthorName;

        public string ShelfLocation => Shelf?.ShelfLocation;


        public string GenreName => Genre?.GenreName;
        public bool IsSelected { get; set; }

        public string ImageFullPath
        {
            get
            {
                if (!string.IsNullOrEmpty(ImagePath))
                {
                    return $"/Resources/{ImagePath}";
                }
                return "/Resources/placeholder.png";
            }
        }

        public void UpdateImage(string newFileName)
        {
            ImagePath = newFileName;
        }

        public virtual Author Author { get; set; }
        public virtual Genre Genre { get; set; }
        public virtual Shelf Shelf { get; set; }
    }
}


